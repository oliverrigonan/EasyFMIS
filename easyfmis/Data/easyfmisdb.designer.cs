#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace easyfmis.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="easyerp")]
	public partial class easyfmisdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertTrnStockTransferItem(TrnStockTransferItem instance);
    partial void UpdateTrnStockTransferItem(TrnStockTransferItem instance);
    partial void DeleteTrnStockTransferItem(TrnStockTransferItem instance);
    partial void InsertMstAccountCategory(MstAccountCategory instance);
    partial void UpdateMstAccountCategory(MstAccountCategory instance);
    partial void DeleteMstAccountCategory(MstAccountCategory instance);
    partial void InsertMstAccountType(MstAccountType instance);
    partial void UpdateMstAccountType(MstAccountType instance);
    partial void DeleteMstAccountType(MstAccountType instance);
    partial void InsertMstArticle(MstArticle instance);
    partial void UpdateMstArticle(MstArticle instance);
    partial void DeleteMstArticle(MstArticle instance);
    partial void InsertMstArticleComponent(MstArticleComponent instance);
    partial void UpdateMstArticleComponent(MstArticleComponent instance);
    partial void DeleteMstArticleComponent(MstArticleComponent instance);
    partial void InsertMstArticleGroup(MstArticleGroup instance);
    partial void UpdateMstArticleGroup(MstArticleGroup instance);
    partial void DeleteMstArticleGroup(MstArticleGroup instance);
    partial void InsertMstArticleInventory(MstArticleInventory instance);
    partial void UpdateMstArticleInventory(MstArticleInventory instance);
    partial void DeleteMstArticleInventory(MstArticleInventory instance);
    partial void InsertMstArticlePrice(MstArticlePrice instance);
    partial void UpdateMstArticlePrice(MstArticlePrice instance);
    partial void DeleteMstArticlePrice(MstArticlePrice instance);
    partial void InsertMstArticleType(MstArticleType instance);
    partial void UpdateMstArticleType(MstArticleType instance);
    partial void DeleteMstArticleType(MstArticleType instance);
    partial void InsertMstArticleUnit(MstArticleUnit instance);
    partial void UpdateMstArticleUnit(MstArticleUnit instance);
    partial void DeleteMstArticleUnit(MstArticleUnit instance);
    partial void InsertMstBranch(MstBranch instance);
    partial void UpdateMstBranch(MstBranch instance);
    partial void DeleteMstBranch(MstBranch instance);
    partial void InsertMstCompany(MstCompany instance);
    partial void UpdateMstCompany(MstCompany instance);
    partial void DeleteMstCompany(MstCompany instance);
    partial void InsertMstDiscount(MstDiscount instance);
    partial void UpdateMstDiscount(MstDiscount instance);
    partial void DeleteMstDiscount(MstDiscount instance);
    partial void InsertMstPayType(MstPayType instance);
    partial void UpdateMstPayType(MstPayType instance);
    partial void DeleteMstPayType(MstPayType instance);
    partial void InsertMstTax(MstTax instance);
    partial void UpdateMstTax(MstTax instance);
    partial void DeleteMstTax(MstTax instance);
    partial void InsertMstTerm(MstTerm instance);
    partial void UpdateMstTerm(MstTerm instance);
    partial void DeleteMstTerm(MstTerm instance);
    partial void InsertMstUnit(MstUnit instance);
    partial void UpdateMstUnit(MstUnit instance);
    partial void DeleteMstUnit(MstUnit instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserForm(MstUserForm instance);
    partial void UpdateMstUserForm(MstUserForm instance);
    partial void DeleteMstUserForm(MstUserForm instance);
    partial void InsertSysForm(SysForm instance);
    partial void UpdateSysForm(SysForm instance);
    partial void DeleteSysForm(SysForm instance);
    partial void InsertTrnCollection(TrnCollection instance);
    partial void UpdateTrnCollection(TrnCollection instance);
    partial void DeleteTrnCollection(TrnCollection instance);
    partial void InsertTrnCollectionLine(TrnCollectionLine instance);
    partial void UpdateTrnCollectionLine(TrnCollectionLine instance);
    partial void DeleteTrnCollectionLine(TrnCollectionLine instance);
    partial void InsertTrnDisbursement(TrnDisbursement instance);
    partial void UpdateTrnDisbursement(TrnDisbursement instance);
    partial void DeleteTrnDisbursement(TrnDisbursement instance);
    partial void InsertTrnDisbursementLine(TrnDisbursementLine instance);
    partial void UpdateTrnDisbursementLine(TrnDisbursementLine instance);
    partial void DeleteTrnDisbursementLine(TrnDisbursementLine instance);
    partial void InsertTrnInventory(TrnInventory instance);
    partial void UpdateTrnInventory(TrnInventory instance);
    partial void DeleteTrnInventory(TrnInventory instance);
    partial void InsertTrnJournal(TrnJournal instance);
    partial void UpdateTrnJournal(TrnJournal instance);
    partial void DeleteTrnJournal(TrnJournal instance);
    partial void InsertTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void UpdateTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void DeleteTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void InsertTrnPurchaseOrderItem(TrnPurchaseOrderItem instance);
    partial void UpdateTrnPurchaseOrderItem(TrnPurchaseOrderItem instance);
    partial void DeleteTrnPurchaseOrderItem(TrnPurchaseOrderItem instance);
    partial void InsertTrnReceivingReceipt(TrnReceivingReceipt instance);
    partial void UpdateTrnReceivingReceipt(TrnReceivingReceipt instance);
    partial void DeleteTrnReceivingReceipt(TrnReceivingReceipt instance);
    partial void InsertTrnReceivingReceiptItem(TrnReceivingReceiptItem instance);
    partial void UpdateTrnReceivingReceiptItem(TrnReceivingReceiptItem instance);
    partial void DeleteTrnReceivingReceiptItem(TrnReceivingReceiptItem instance);
    partial void InsertTrnSalesInvoice(TrnSalesInvoice instance);
    partial void UpdateTrnSalesInvoice(TrnSalesInvoice instance);
    partial void DeleteTrnSalesInvoice(TrnSalesInvoice instance);
    partial void InsertTrnSalesInvoiceItem(TrnSalesInvoiceItem instance);
    partial void UpdateTrnSalesInvoiceItem(TrnSalesInvoiceItem instance);
    partial void DeleteTrnSalesInvoiceItem(TrnSalesInvoiceItem instance);
    partial void InsertTrnSalesOrder(TrnSalesOrder instance);
    partial void UpdateTrnSalesOrder(TrnSalesOrder instance);
    partial void DeleteTrnSalesOrder(TrnSalesOrder instance);
    partial void InsertTrnSalesOrderItem(TrnSalesOrderItem instance);
    partial void UpdateTrnSalesOrderItem(TrnSalesOrderItem instance);
    partial void DeleteTrnSalesOrderItem(TrnSalesOrderItem instance);
    partial void InsertTrnStockIn(TrnStockIn instance);
    partial void UpdateTrnStockIn(TrnStockIn instance);
    partial void DeleteTrnStockIn(TrnStockIn instance);
    partial void InsertTrnStockInItem(TrnStockInItem instance);
    partial void UpdateTrnStockInItem(TrnStockInItem instance);
    partial void DeleteTrnStockInItem(TrnStockInItem instance);
    partial void InsertTrnStockOut(TrnStockOut instance);
    partial void UpdateTrnStockOut(TrnStockOut instance);
    partial void DeleteTrnStockOut(TrnStockOut instance);
    partial void InsertTrnStockOutItem(TrnStockOutItem instance);
    partial void UpdateTrnStockOutItem(TrnStockOutItem instance);
    partial void DeleteTrnStockOutItem(TrnStockOutItem instance);
    partial void InsertTrnStockTransfer(TrnStockTransfer instance);
    partial void UpdateTrnStockTransfer(TrnStockTransfer instance);
    partial void DeleteTrnStockTransfer(TrnStockTransfer instance);
    #endregion
		
		public easyfmisdbDataContext() : 
				base(global::easyfmis.Properties.Settings.Default.easyerpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public easyfmisdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public easyfmisdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public easyfmisdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public easyfmisdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this.GetTable<TrnStockTransferItem>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountCategory> MstAccountCategories
		{
			get
			{
				return this.GetTable<MstAccountCategory>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountType> MstAccountTypes
		{
			get
			{
				return this.GetTable<MstAccountType>();
			}
		}
		
		public System.Data.Linq.Table<MstArticle> MstArticles
		{
			get
			{
				return this.GetTable<MstArticle>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleComponent> MstArticleComponents
		{
			get
			{
				return this.GetTable<MstArticleComponent>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this.GetTable<MstArticleGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleInventory> MstArticleInventories
		{
			get
			{
				return this.GetTable<MstArticleInventory>();
			}
		}
		
		public System.Data.Linq.Table<MstArticlePrice> MstArticlePrices
		{
			get
			{
				return this.GetTable<MstArticlePrice>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleType> MstArticleTypes
		{
			get
			{
				return this.GetTable<MstArticleType>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleUnit> MstArticleUnits
		{
			get
			{
				return this.GetTable<MstArticleUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstBranch> MstBranches
		{
			get
			{
				return this.GetTable<MstBranch>();
			}
		}
		
		public System.Data.Linq.Table<MstCompany> MstCompanies
		{
			get
			{
				return this.GetTable<MstCompany>();
			}
		}
		
		public System.Data.Linq.Table<MstDiscount> MstDiscounts
		{
			get
			{
				return this.GetTable<MstDiscount>();
			}
		}
		
		public System.Data.Linq.Table<MstPayType> MstPayTypes
		{
			get
			{
				return this.GetTable<MstPayType>();
			}
		}
		
		public System.Data.Linq.Table<MstTax> MstTaxes
		{
			get
			{
				return this.GetTable<MstTax>();
			}
		}
		
		public System.Data.Linq.Table<MstTerm> MstTerms
		{
			get
			{
				return this.GetTable<MstTerm>();
			}
		}
		
		public System.Data.Linq.Table<MstUnit> MstUnits
		{
			get
			{
				return this.GetTable<MstUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserForm> MstUserForms
		{
			get
			{
				return this.GetTable<MstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<SysForm> SysForms
		{
			get
			{
				return this.GetTable<SysForm>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollection> TrnCollections
		{
			get
			{
				return this.GetTable<TrnCollection>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this.GetTable<TrnCollectionLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this.GetTable<TrnDisbursement>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this.GetTable<TrnDisbursementLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnInventory> TrnInventories
		{
			get
			{
				return this.GetTable<TrnInventory>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournal> TrnJournals
		{
			get
			{
				return this.GetTable<TrnJournal>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this.GetTable<TrnPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this.GetTable<TrnPurchaseOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this.GetTable<TrnReceivingReceipt>();
			}
		}
		
		public System.Data.Linq.Table<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this.GetTable<TrnReceivingReceiptItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this.GetTable<TrnSalesInvoice>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this.GetTable<TrnSalesInvoiceItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this.GetTable<TrnSalesOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this.GetTable<TrnSalesOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockIn> TrnStockIns
		{
			get
			{
				return this.GetTable<TrnStockIn>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this.GetTable<TrnStockInItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this.GetTable<TrnStockOut>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this.GetTable<TrnStockOutItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this.GetTable<TrnStockTransfer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCode;
		
		private string _Account;
		
		private int _AccountTypeId;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups;
		
		private EntitySet<MstPayType> _MstPayTypes;
		
		private EntitySet<MstTax> _MstTaxes;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstAccountType> _MstAccountType;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAccountTypeIdChanging(int value);
    partial void OnAccountTypeIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccount()
		{
			this._MstArticleGroups = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups), new Action<MstArticleGroup>(this.detach_MstArticleGroups));
			this._MstPayTypes = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes), new Action<MstPayType>(this.detach_MstPayTypes));
			this._MstTaxes = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes), new Action<MstTax>(this.detach_MstTaxes));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstAccountType = default(EntityRef<MstAccountType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", DbType="Int NOT NULL")]
		public int AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					if (this._MstAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup", Storage="_MstArticleGroups", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this._MstArticleGroups;
			}
			set
			{
				this._MstArticleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstPayTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstPayType> MstPayTypes
		{
			get
			{
				return this._MstPayTypes;
			}
			set
			{
				this._MstPayTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTax", Storage="_MstTaxes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstTax> MstTaxes
		{
			get
			{
				return this._MstTaxes;
			}
			set
			{
				this._MstTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountType_MstAccount", Storage="_MstAccountType", ThisKey="AccountTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountType MstAccountType
		{
			get
			{
				return this._MstAccountType.Entity;
			}
			set
			{
				MstAccountType previousValue = this._MstAccountType.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountType.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstAccountType.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._AccountTypeId = value.Id;
					}
					else
					{
						this._AccountTypeId = default(int);
					}
					this.SendPropertyChanged("MstAccountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccounts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccounts1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockTransferItem")]
	public partial class TrnStockTransferItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _STId;
		
		private int _ItemId;
		
		private int _ItemInventoryId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSTIdChanging(int value);
    partial void OnSTIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(int value);
    partial void OnItemInventoryIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockTransferItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="Int NOT NULL")]
		public int STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int NOT NULL")]
		public int ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransferItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockTransferItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(int);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnStockTransferItem", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(int);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountCategory")]
	public partial class MstAccountCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCategoryCode;
		
		private string _AccountCategory;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedByDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccountType> _MstAccountTypes;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCategoryCodeChanging(string value);
    partial void OnAccountCategoryCodeChanged();
    partial void OnAccountCategoryChanging(string value);
    partial void OnAccountCategoryChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedByDateTimeChanging(System.DateTime value);
    partial void OnCreatedByDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountCategory()
		{
			this._MstAccountTypes = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes), new Action<MstAccountType>(this.detach_MstAccountTypes));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategoryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCategoryCode
		{
			get
			{
				return this._AccountCategoryCode;
			}
			set
			{
				if ((this._AccountCategoryCode != value))
				{
					this.OnAccountCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCategoryCode = value;
					this.SendPropertyChanged("AccountCategoryCode");
					this.OnAccountCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AccountCategory
		{
			get
			{
				return this._AccountCategory;
			}
			set
			{
				if ((this._AccountCategory != value))
				{
					this.OnAccountCategoryChanging(value);
					this.SendPropertyChanging();
					this._AccountCategory = value;
					this.SendPropertyChanged("AccountCategory");
					this.OnAccountCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedByDateTime
		{
			get
			{
				return this._CreatedByDateTime;
			}
			set
			{
				if ((this._CreatedByDateTime != value))
				{
					this.OnCreatedByDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedByDateTime = value;
					this.SendPropertyChanged("CreatedByDateTime");
					this.OnCreatedByDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCategory_MstAccountType", Storage="_MstAccountTypes", ThisKey="Id", OtherKey="ArticleCategoryId")]
		public EntitySet<MstAccountType> MstAccountTypes
		{
			get
			{
				return this._MstAccountTypes;
			}
			set
			{
				this._MstAccountTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccountCategories.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccountCategories.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccountCategories1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccountCategories1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCategory = this;
		}
		
		private void detach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountType")]
	public partial class MstAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleTypeCode;
		
		private string _ArticleType;
		
		private int _ArticleCategoryId;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntityRef<MstAccountCategory> _MstAccountCategory;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleTypeCodeChanging(string value);
    partial void OnArticleTypeCodeChanged();
    partial void OnArticleTypeChanging(string value);
    partial void OnArticleTypeChanged();
    partial void OnArticleCategoryIdChanging(int value);
    partial void OnArticleCategoryIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountType()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstAccountCategory = default(EntityRef<MstAccountCategory>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleTypeCode
		{
			get
			{
				return this._ArticleTypeCode;
			}
			set
			{
				if ((this._ArticleTypeCode != value))
				{
					this.OnArticleTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeCode = value;
					this.SendPropertyChanged("ArticleTypeCode");
					this.OnArticleTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCategoryId", DbType="Int NOT NULL")]
		public int ArticleCategoryId
		{
			get
			{
				return this._ArticleCategoryId;
			}
			set
			{
				if ((this._ArticleCategoryId != value))
				{
					if (this._MstAccountCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleCategoryId = value;
					this.SendPropertyChanged("ArticleCategoryId");
					this.OnArticleCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountType_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="AccountTypeId")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCategory_MstAccountType", Storage="_MstAccountCategory", ThisKey="ArticleCategoryId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountCategory MstAccountCategory
		{
			get
			{
				return this._MstAccountCategory.Entity;
			}
			set
			{
				MstAccountCategory previousValue = this._MstAccountCategory.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountCategory.Entity = null;
						previousValue.MstAccountTypes.Remove(this);
					}
					this._MstAccountCategory.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes.Add(this);
						this._ArticleCategoryId = value.Id;
					}
					else
					{
						this._ArticleCategoryId = default(int);
					}
					this.SendPropertyChanged("MstAccountCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccountTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccountTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountType = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticle")]
	public partial class MstArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleCode;
		
		private string _ArticleBarCode;
		
		private string _Article;
		
		private string _ArticleAlias;
		
		private int _ArticleTypeId;
		
		private int _ArticleGroupId;
		
		private string _GenericArticleName;
		
		private string _Category;
		
		private int _VATInTaxId;
		
		private int _VATOutTaxId;
		
		private int _UnitId;
		
		private System.Nullable<int> _DefaultSupplierId;
		
		private decimal _DefaultCost;
		
		private decimal _DefaultPrice;
		
		private decimal _ReorderQuantity;
		
		private bool _IsInventory;
		
		private string _Address;
		
		private string _ContactPerson;
		
		private string _ContactNumber;
		
		private string _EmailAddress;
		
		private string _TIN;
		
		private string _Remarks;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedByDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<MstArticleComponent> _MstArticleComponents;
		
		private EntitySet<MstArticleComponent> _MstArticleComponents1;
		
		private EntitySet<MstArticleInventory> _MstArticleInventories;
		
		private EntitySet<MstArticlePrice> _MstArticlePrices;
		
		private EntitySet<MstArticleUnit> _MstArticleUnits;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements1;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnPurchaseOrderItem> _TrnPurchaseOrderItems;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnSalesOrderItem> _TrnSalesOrderItems;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstArticleGroup> _MstArticleGroup;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstTax> _MstTax1;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleCodeChanging(string value);
    partial void OnArticleCodeChanged();
    partial void OnArticleBarCodeChanging(string value);
    partial void OnArticleBarCodeChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnArticleAliasChanging(string value);
    partial void OnArticleAliasChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnArticleGroupIdChanging(int value);
    partial void OnArticleGroupIdChanged();
    partial void OnGenericArticleNameChanging(string value);
    partial void OnGenericArticleNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnVATInTaxIdChanging(int value);
    partial void OnVATInTaxIdChanged();
    partial void OnVATOutTaxIdChanging(int value);
    partial void OnVATOutTaxIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnDefaultSupplierIdChanging(System.Nullable<int> value);
    partial void OnDefaultSupplierIdChanged();
    partial void OnDefaultCostChanging(decimal value);
    partial void OnDefaultCostChanged();
    partial void OnDefaultPriceChanging(decimal value);
    partial void OnDefaultPriceChanged();
    partial void OnReorderQuantityChanging(decimal value);
    partial void OnReorderQuantityChanged();
    partial void OnIsInventoryChanging(bool value);
    partial void OnIsInventoryChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedByDateTimeChanging(System.DateTime value);
    partial void OnCreatedByDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticle()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._MstArticleComponents = new EntitySet<MstArticleComponent>(new Action<MstArticleComponent>(this.attach_MstArticleComponents), new Action<MstArticleComponent>(this.detach_MstArticleComponents));
			this._MstArticleComponents1 = new EntitySet<MstArticleComponent>(new Action<MstArticleComponent>(this.attach_MstArticleComponents1), new Action<MstArticleComponent>(this.detach_MstArticleComponents1));
			this._MstArticleInventories = new EntitySet<MstArticleInventory>(new Action<MstArticleInventory>(this.attach_MstArticleInventories), new Action<MstArticleInventory>(this.detach_MstArticleInventories));
			this._MstArticlePrices = new EntitySet<MstArticlePrice>(new Action<MstArticlePrice>(this.attach_MstArticlePrices), new Action<MstArticlePrice>(this.detach_MstArticlePrices));
			this._MstArticleUnits = new EntitySet<MstArticleUnit>(new Action<MstArticleUnit>(this.attach_MstArticleUnits), new Action<MstArticleUnit>(this.detach_MstArticleUnits));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursements1 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements1), new Action<TrnDisbursement>(this.detach_TrnDisbursements1));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnPurchaseOrderItems = new EntitySet<TrnPurchaseOrderItem>(new Action<TrnPurchaseOrderItem>(this.attach_TrnPurchaseOrderItems), new Action<TrnPurchaseOrderItem>(this.detach_TrnPurchaseOrderItems));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnSalesOrderItems = new EntitySet<TrnSalesOrderItem>(new Action<TrnSalesOrderItem>(this.attach_TrnSalesOrderItems), new Action<TrnSalesOrderItem>(this.detach_TrnSalesOrderItems));
			this._TrnStockInItems = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems), new Action<TrnStockInItem>(this.detach_TrnStockInItems));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstArticleGroup = default(EntityRef<MstArticleGroup>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstTax1 = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleCode
		{
			get
			{
				return this._ArticleCode;
			}
			set
			{
				if ((this._ArticleCode != value))
				{
					this.OnArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleCode = value;
					this.SendPropertyChanged("ArticleCode");
					this.OnArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleBarCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleBarCode
		{
			get
			{
				return this._ArticleBarCode;
			}
			set
			{
				if ((this._ArticleBarCode != value))
				{
					this.OnArticleBarCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleBarCode = value;
					this.SendPropertyChanged("ArticleBarCode");
					this.OnArticleBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleAlias", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleAlias
		{
			get
			{
				return this._ArticleAlias;
			}
			set
			{
				if ((this._ArticleAlias != value))
				{
					this.OnArticleAliasChanging(value);
					this.SendPropertyChanging();
					this._ArticleAlias = value;
					this.SendPropertyChanged("ArticleAlias");
					this.OnArticleAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroupId", DbType="Int NOT NULL")]
		public int ArticleGroupId
		{
			get
			{
				return this._ArticleGroupId;
			}
			set
			{
				if ((this._ArticleGroupId != value))
				{
					if (this._MstArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroupId = value;
					this.SendPropertyChanged("ArticleGroupId");
					this.OnArticleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericArticleName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string GenericArticleName
		{
			get
			{
				return this._GenericArticleName;
			}
			set
			{
				if ((this._GenericArticleName != value))
				{
					this.OnGenericArticleNameChanging(value);
					this.SendPropertyChanging();
					this._GenericArticleName = value;
					this.SendPropertyChanged("GenericArticleName");
					this.OnGenericArticleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATInTaxId", DbType="Int NOT NULL")]
		public int VATInTaxId
		{
			get
			{
				return this._VATInTaxId;
			}
			set
			{
				if ((this._VATInTaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVATInTaxIdChanging(value);
					this.SendPropertyChanging();
					this._VATInTaxId = value;
					this.SendPropertyChanged("VATInTaxId");
					this.OnVATInTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATOutTaxId", DbType="Int NOT NULL")]
		public int VATOutTaxId
		{
			get
			{
				return this._VATOutTaxId;
			}
			set
			{
				if ((this._VATOutTaxId != value))
				{
					if (this._MstTax1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVATOutTaxIdChanging(value);
					this.SendPropertyChanging();
					this._VATOutTaxId = value;
					this.SendPropertyChanged("VATOutTaxId");
					this.OnVATOutTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSupplierId", DbType="Int")]
		public System.Nullable<int> DefaultSupplierId
		{
			get
			{
				return this._DefaultSupplierId;
			}
			set
			{
				if ((this._DefaultSupplierId != value))
				{
					this.OnDefaultSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultSupplierId = value;
					this.SendPropertyChanged("DefaultSupplierId");
					this.OnDefaultSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal DefaultCost
		{
			get
			{
				return this._DefaultCost;
			}
			set
			{
				if ((this._DefaultCost != value))
				{
					this.OnDefaultCostChanging(value);
					this.SendPropertyChanging();
					this._DefaultCost = value;
					this.SendPropertyChanged("DefaultCost");
					this.OnDefaultCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal DefaultPrice
		{
			get
			{
				return this._DefaultPrice;
			}
			set
			{
				if ((this._DefaultPrice != value))
				{
					this.OnDefaultPriceChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrice = value;
					this.SendPropertyChanged("DefaultPrice");
					this.OnDefaultPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal ReorderQuantity
		{
			get
			{
				return this._ReorderQuantity;
			}
			set
			{
				if ((this._ReorderQuantity != value))
				{
					this.OnReorderQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReorderQuantity = value;
					this.SendPropertyChanged("ReorderQuantity");
					this.OnReorderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInventory", DbType="Bit NOT NULL")]
		public bool IsInventory
		{
			get
			{
				return this._IsInventory;
			}
			set
			{
				if ((this._IsInventory != value))
				{
					this.OnIsInventoryChanging(value);
					this.SendPropertyChanging();
					this._IsInventory = value;
					this.SendPropertyChanged("IsInventory");
					this.OnIsInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedByDateTime
		{
			get
			{
				return this._CreatedByDateTime;
			}
			set
			{
				if ((this._CreatedByDateTime != value))
				{
					this.OnCreatedByDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedByDateTime = value;
					this.SendPropertyChanged("CreatedByDateTime");
					this.OnCreatedByDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent", Storage="_MstArticleComponents", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleComponent> MstArticleComponents
		{
			get
			{
				return this._MstArticleComponents;
			}
			set
			{
				this._MstArticleComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent1", Storage="_MstArticleComponents1", ThisKey="Id", OtherKey="ComponentArticleId")]
		public EntitySet<MstArticleComponent> MstArticleComponents1
		{
			get
			{
				return this._MstArticleComponents1;
			}
			set
			{
				this._MstArticleComponents1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleInventory", Storage="_MstArticleInventories", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleInventory> MstArticleInventories
		{
			get
			{
				return this._MstArticleInventories;
			}
			set
			{
				this._MstArticleInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticlePrice", Storage="_MstArticlePrices", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticlePrice> MstArticlePrices
		{
			get
			{
				return this._MstArticlePrices;
			}
			set
			{
				this._MstArticlePrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleUnit", Storage="_MstArticleUnits", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleUnit> MstArticleUnits
		{
			get
			{
				return this._MstArticleUnits;
			}
			set
			{
				this._MstArticleUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement1", Storage="_TrnDisbursements1", ThisKey="Id", OtherKey="BankId")]
		public EntitySet<TrnDisbursement> TrnDisbursements1
		{
			get
			{
				return this._TrnDisbursements1;
			}
			set
			{
				this._TrnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrderItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this._TrnPurchaseOrderItems;
			}
			set
			{
				this._TrnPurchaseOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrderItem", Storage="_TrnSalesOrderItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this._TrnSalesOrderItems;
			}
			set
			{
				this._TrnSalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockInItem", Storage="_TrnStockInItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this._TrnStockInItems;
			}
			set
			{
				this._TrnStockInItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_MstArticle", Storage="_MstArticleGroup", ThisKey="ArticleGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleGroup MstArticleGroup
		{
			get
			{
				return this._MstArticleGroup.Entity;
			}
			set
			{
				MstArticleGroup previousValue = this._MstArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleGroup.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleGroup.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleGroupId = value.Id;
					}
					else
					{
						this._ArticleGroupId = default(int);
					}
					this.SendPropertyChanged("MstArticleGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticle", Storage="_MstTax", ThisKey="VATInTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._VATInTaxId = value.Id;
					}
					else
					{
						this._VATInTaxId = default(int);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticle1", Storage="_MstTax1", ThisKey="VATOutTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax1
		{
			get
			{
				return this._MstTax1.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax1.Entity;
				if (((previousValue != value) 
							|| (this._MstTax1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstTax1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._VATOutTaxId = value.Id;
					}
					else
					{
						this._VATOutTaxId = default(int);
					}
					this.SendPropertyChanged("MstTax1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticle", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleComponents(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleComponents(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleComponents1(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_MstArticleComponents1(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticlePrices(MstArticlePrice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticlePrices(MstArticlePrice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleComponent")]
	public partial class MstArticleComponent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private int _ComponentArticleId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnComponentArticleIdChanging(int value);
    partial void OnComponentArticleIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public MstArticleComponent()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentArticleId", DbType="Int NOT NULL")]
		public int ComponentArticleId
		{
			get
			{
				return this._ComponentArticleId;
			}
			set
			{
				if ((this._ComponentArticleId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentArticleId = value;
					this.SendPropertyChanged("ComponentArticleId");
					this.OnComponentArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleComponents.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleComponents.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent1", Storage="_MstArticle1", ThisKey="ComponentArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.MstArticleComponents1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.MstArticleComponents1.Add(this);
						this._ComponentArticleId = value.Id;
					}
					else
					{
						this._ComponentArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleComponent", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleComponents.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleComponents.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleGroup")]
	public partial class MstArticleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleGroup;
		
		private int _ArticleTypeId;
		
		private int _AccountId;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleGroupChanging(string value);
    partial void OnArticleGroupChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    #endregion
		
		public MstArticleGroup()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroup", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleGroup
		{
			get
			{
				return this._ArticleGroup;
			}
			set
			{
				if ((this._ArticleGroup != value))
				{
					this.OnArticleGroupChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroup = value;
					this.SendPropertyChanged("ArticleGroup");
					this.OnArticleGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleGroupId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="ArticleGroupId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="ArticleGroupId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstArticleGroups.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticleGroup", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticleGroups.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleInventory")]
	public partial class MstArticleInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _InventoryCode;
		
		private int _ArticleId;
		
		private decimal _Quantity;
		
		private decimal _Cost1;
		
		private decimal _Cost2;
		
		private decimal _Cost3;
		
		private decimal _Cost4;
		
		private decimal _Cost5;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnSalesOrderItem> _TrnSalesOrderItems;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnInventoryCodeChanging(string value);
    partial void OnInventoryCodeChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCost1Changing(decimal value);
    partial void OnCost1Changed();
    partial void OnCost2Changing(decimal value);
    partial void OnCost2Changed();
    partial void OnCost3Changing(decimal value);
    partial void OnCost3Changed();
    partial void OnCost4Changing(decimal value);
    partial void OnCost4Changed();
    partial void OnCost5Changing(decimal value);
    partial void OnCost5Changed();
    #endregion
		
		public MstArticleInventory()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnSalesOrderItems = new EntitySet<TrnSalesOrderItem>(new Action<TrnSalesOrderItem>(this.attach_TrnSalesOrderItems), new Action<TrnSalesOrderItem>(this.detach_TrnSalesOrderItems));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InventoryCode
		{
			get
			{
				return this._InventoryCode;
			}
			set
			{
				if ((this._InventoryCode != value))
				{
					this.OnInventoryCodeChanging(value);
					this.SendPropertyChanging();
					this._InventoryCode = value;
					this.SendPropertyChanged("InventoryCode");
					this.OnInventoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost1", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost1
		{
			get
			{
				return this._Cost1;
			}
			set
			{
				if ((this._Cost1 != value))
				{
					this.OnCost1Changing(value);
					this.SendPropertyChanging();
					this._Cost1 = value;
					this.SendPropertyChanged("Cost1");
					this.OnCost1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost2", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost2
		{
			get
			{
				return this._Cost2;
			}
			set
			{
				if ((this._Cost2 != value))
				{
					this.OnCost2Changing(value);
					this.SendPropertyChanging();
					this._Cost2 = value;
					this.SendPropertyChanged("Cost2");
					this.OnCost2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost3", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost3
		{
			get
			{
				return this._Cost3;
			}
			set
			{
				if ((this._Cost3 != value))
				{
					this.OnCost3Changing(value);
					this.SendPropertyChanging();
					this._Cost3 = value;
					this.SendPropertyChanged("Cost3");
					this.OnCost3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost4", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost4
		{
			get
			{
				return this._Cost4;
			}
			set
			{
				if ((this._Cost4 != value))
				{
					this.OnCost4Changing(value);
					this.SendPropertyChanging();
					this._Cost4 = value;
					this.SendPropertyChanged("Cost4");
					this.OnCost4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost5", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost5
		{
			get
			{
				return this._Cost5;
			}
			set
			{
				if ((this._Cost5 != value))
				{
					this.OnCost5Changing(value);
					this.SendPropertyChanging();
					this._Cost5 = value;
					this.SendPropertyChanged("Cost5");
					this.OnCost5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnSalesOrderItem", Storage="_TrnSalesOrderItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this._TrnSalesOrderItems;
			}
			set
			{
				this._TrnSalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleInventory", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleInventories.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleInventories.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstArticleInventory", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstArticleInventories.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstArticleInventories.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticlePrice")]
	public partial class MstArticlePrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private string _PriceDescription;
		
		private decimal _Price;
		
		private EntityRef<MstArticle> _MstArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnPriceDescriptionChanging(string value);
    partial void OnPriceDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public MstArticlePrice()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PriceDescription
		{
			get
			{
				return this._PriceDescription;
			}
			set
			{
				if ((this._PriceDescription != value))
				{
					this.OnPriceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PriceDescription = value;
					this.SendPropertyChanged("PriceDescription");
					this.OnPriceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticlePrice", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticlePrices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticlePrices.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleType")]
	public partial class MstArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleType;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleTypeChanging(string value);
    partial void OnArticleTypeChanged();
    #endregion
		
		public MstArticleType()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleGroups = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups), new Action<MstArticleGroup>(this.detach_MstArticleGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticleGroup", Storage="_MstArticleGroups", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this._MstArticleGroups;
			}
			set
			{
				this._MstArticleGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
		
		private void attach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleUnit")]
	public partial class MstArticleUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private decimal _BaseUnitMultiplier;
		
		private decimal _UnitMultiplier;
		
		private int _UnitId;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnBaseUnitMultiplierChanging(decimal value);
    partial void OnBaseUnitMultiplierChanged();
    partial void OnUnitMultiplierChanging(decimal value);
    partial void OnUnitMultiplierChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    #endregion
		
		public MstArticleUnit()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitMultiplier", DbType="Decimal(18,12) NOT NULL")]
		public decimal BaseUnitMultiplier
		{
			get
			{
				return this._BaseUnitMultiplier;
			}
			set
			{
				if ((this._BaseUnitMultiplier != value))
				{
					this.OnBaseUnitMultiplierChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitMultiplier = value;
					this.SendPropertyChanged("BaseUnitMultiplier");
					this.OnBaseUnitMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMultiplier", DbType="Decimal(18,12) NOT NULL")]
		public decimal UnitMultiplier
		{
			get
			{
				return this._UnitMultiplier;
			}
			set
			{
				if ((this._UnitMultiplier != value))
				{
					this.OnUnitMultiplierChanging(value);
					this.SendPropertyChanging();
					this._UnitMultiplier = value;
					this.SendPropertyChanged("UnitMultiplier");
					this.OnUnitMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleUnit", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleUnits.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleUnits.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleUnit", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleUnits.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleUnits.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBranch")]
	public partial class MstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BranchCode;
		
		private string _Branch;
		
		private int _CompanyId;
		
		private EntitySet<MstArticleInventory> _MstArticleInventories;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers1;
		
		private EntityRef<MstCompany> _MstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public MstBranch()
		{
			this._MstArticleInventories = new EntitySet<MstArticleInventory>(new Action<MstArticleInventory>(this.attach_MstArticleInventories), new Action<MstArticleInventory>(this.detach_MstArticleInventories));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._TrnStockTransfers1 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers1), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers1));
			this._MstCompany = default(EntityRef<MstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstArticleInventory", Storage="_MstArticleInventories", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstArticleInventory> MstArticleInventories
		{
			get
			{
				return this._MstArticleInventories;
			}
			set
			{
				this._MstArticleInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer1", Storage="_TrnStockTransfers1", ThisKey="Id", OtherKey="ToBranchId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers1
		{
			get
			{
				return this._TrnStockTransfers1;
			}
			set
			{
				this._TrnStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch1 = this;
		}
		
		private void detach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCompany")]
	public partial class MstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyCode;
		
		private string _Company;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedByDateTime;
		
		private EntitySet<MstBranch> _MstBranches;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedByDateTimeChanging(System.DateTime value);
    partial void OnUpdatedByDateTimeChanged();
    #endregion
		
		public MstCompany()
		{
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedByDateTime
		{
			get
			{
				return this._UpdatedByDateTime;
			}
			set
			{
				if ((this._UpdatedByDateTime != value))
				{
					this.OnUpdatedByDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByDateTime = value;
					this.SendPropertyChanged("UpdatedByDateTime");
					this.OnUpdatedByDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCompanies.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCompanies.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCompanies1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCompanies1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDiscount")]
	public partial class MstDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Discount;
		
		private decimal _DiscountRate;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedByDateTime;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnSalesOrderItem> _TrnSalesOrderItems;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiscountChanging(string value);
    partial void OnDiscountChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedByDateTimeChanging(System.DateTime value);
    partial void OnUpdatedByDateTimeChanged();
    #endregion
		
		public MstDiscount()
		{
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnSalesOrderItems = new EntitySet<TrnSalesOrderItem>(new Action<TrnSalesOrderItem>(this.attach_TrnSalesOrderItems), new Action<TrnSalesOrderItem>(this.detach_TrnSalesOrderItems));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedByDateTime
		{
			get
			{
				return this._UpdatedByDateTime;
			}
			set
			{
				if ((this._UpdatedByDateTime != value))
				{
					this.OnUpdatedByDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByDateTime = value;
					this.SendPropertyChanged("UpdatedByDateTime");
					this.OnUpdatedByDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesOrderItem", Storage="_TrnSalesOrderItems", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this._TrnSalesOrderItems;
			}
			set
			{
				this._TrnSalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstDiscounts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstDiscounts.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstDiscounts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstDiscounts1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
		
		private void attach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayType")]
	public partial class MstPayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayType;
		
		private int _AccountId;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstPayType()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstPayTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstPayTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstPayTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTax")]
	public partial class MstTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaxCode;
		
		private string _Tax;
		
		private decimal _Rate;
		
		private int _AccountId;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnSalesOrderItem> _TrnSalesOrderItems;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnTaxChanging(string value);
    partial void OnTaxChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTax()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnSalesOrderItems = new EntitySet<TrnSalesOrderItem>(new Action<TrnSalesOrderItem>(this.attach_TrnSalesOrderItems), new Action<TrnSalesOrderItem>(this.detach_TrnSalesOrderItems));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,5) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="VATInTaxId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="VATOutTaxId")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="TaxId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="TaxId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesOrderItem", Storage="_TrnSalesOrderItems", ThisKey="Id", OtherKey="TaxId")]
		public EntitySet<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this._TrnSalesOrderItems;
			}
			set
			{
				this._TrnSalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTax", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstTaxes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstTaxes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTaxes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTaxes.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTaxes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTaxes1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTax1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTax1 = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
		
		private void attach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerm")]
	public partial class MstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Term;
		
		private decimal _NumberOfDays;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnNumberOfDaysChanging(decimal value);
    partial void OnNumberOfDaysChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTerm()
		{
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTerms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTerms.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTerms1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTerms1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUnit")]
	public partial class MstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticleComponent> _MstArticleComponents;
		
		private EntitySet<MstArticleUnit> _MstArticleUnits;
		
		private EntitySet<TrnPurchaseOrderItem> _TrnPurchaseOrderItems;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnSalesOrderItem> _TrnSalesOrderItems;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUnit()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleComponents = new EntitySet<MstArticleComponent>(new Action<MstArticleComponent>(this.attach_MstArticleComponents), new Action<MstArticleComponent>(this.detach_MstArticleComponents));
			this._MstArticleUnits = new EntitySet<MstArticleUnit>(new Action<MstArticleUnit>(this.attach_MstArticleUnits), new Action<MstArticleUnit>(this.detach_MstArticleUnits));
			this._TrnPurchaseOrderItems = new EntitySet<TrnPurchaseOrderItem>(new Action<TrnPurchaseOrderItem>(this.attach_TrnPurchaseOrderItems), new Action<TrnPurchaseOrderItem>(this.detach_TrnPurchaseOrderItems));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnSalesOrderItems = new EntitySet<TrnSalesOrderItem>(new Action<TrnSalesOrderItem>(this.attach_TrnSalesOrderItems), new Action<TrnSalesOrderItem>(this.detach_TrnSalesOrderItems));
			this._TrnStockInItems = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems), new Action<TrnStockInItem>(this.detach_TrnStockInItems));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleComponent", Storage="_MstArticleComponents", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleComponent> MstArticleComponents
		{
			get
			{
				return this._MstArticleComponents;
			}
			set
			{
				this._MstArticleComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleUnit", Storage="_MstArticleUnits", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleUnit> MstArticleUnits
		{
			get
			{
				return this._MstArticleUnits;
			}
			set
			{
				this._MstArticleUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrderItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this._TrnPurchaseOrderItems;
			}
			set
			{
				this._TrnPurchaseOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesOrderItem", Storage="_TrnSalesOrderItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this._TrnSalesOrderItems;
			}
			set
			{
				this._TrnSalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInItem", Storage="_TrnStockInItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this._TrnStockInItems;
			}
			set
			{
				this._TrnStockInItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUnits.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUnits.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstUnits1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstUnits1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticleComponents(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleComponents(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FullName;
		
		private int _CompanyId;
		
		private int _BranchId;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntitySet<MstAccount> _MstAccounts1;
		
		private EntitySet<MstAccountCategory> _MstAccountCategories;
		
		private EntitySet<MstAccountCategory> _MstAccountCategories1;
		
		private EntitySet<MstAccountType> _MstAccountTypes;
		
		private EntitySet<MstAccountType> _MstAccountTypes1;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstCompany> _MstCompanies;
		
		private EntitySet<MstCompany> _MstCompanies1;
		
		private EntitySet<MstDiscount> _MstDiscounts;
		
		private EntitySet<MstDiscount> _MstDiscounts1;
		
		private EntitySet<MstPayType> _MstPayTypes;
		
		private EntitySet<MstPayType> _MstPayTypes1;
		
		private EntitySet<MstTax> _MstTaxes;
		
		private EntitySet<MstTax> _MstTaxes1;
		
		private EntitySet<MstTerm> _MstTerms;
		
		private EntitySet<MstTerm> _MstTerms1;
		
		private EntitySet<MstUnit> _MstUnits;
		
		private EntitySet<MstUnit> _MstUnits1;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollection> _TrnCollections1;
		
		private EntitySet<TrnCollection> _TrnCollections2;
		
		private EntitySet<TrnCollection> _TrnCollections3;
		
		private EntitySet<TrnCollection> _TrnCollections4;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements1;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements2;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements3;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements4;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders1;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders2;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders3;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders4;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders5;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts1;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts2;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts3;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts4;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts5;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices1;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices2;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices3;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices4;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices5;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders1;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders2;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders3;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders4;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders5;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockIn> _TrnStockIns1;
		
		private EntitySet<TrnStockIn> _TrnStockIns2;
		
		private EntitySet<TrnStockIn> _TrnStockIns3;
		
		private EntitySet<TrnStockIn> _TrnStockIns4;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockOut> _TrnStockOuts1;
		
		private EntitySet<TrnStockOut> _TrnStockOuts2;
		
		private EntitySet<TrnStockOut> _TrnStockOuts3;
		
		private EntitySet<TrnStockOut> _TrnStockOuts4;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers1;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers2;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers3;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers4;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstCompany> _MstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUser()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstAccounts1 = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts1), new Action<MstAccount>(this.detach_MstAccounts1));
			this._MstAccountCategories = new EntitySet<MstAccountCategory>(new Action<MstAccountCategory>(this.attach_MstAccountCategories), new Action<MstAccountCategory>(this.detach_MstAccountCategories));
			this._MstAccountCategories1 = new EntitySet<MstAccountCategory>(new Action<MstAccountCategory>(this.attach_MstAccountCategories1), new Action<MstAccountCategory>(this.detach_MstAccountCategories1));
			this._MstAccountTypes = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes), new Action<MstAccountType>(this.detach_MstAccountTypes));
			this._MstAccountTypes1 = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes1), new Action<MstAccountType>(this.detach_MstAccountTypes1));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstCompanies = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies), new Action<MstCompany>(this.detach_MstCompanies));
			this._MstCompanies1 = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies1), new Action<MstCompany>(this.detach_MstCompanies1));
			this._MstDiscounts = new EntitySet<MstDiscount>(new Action<MstDiscount>(this.attach_MstDiscounts), new Action<MstDiscount>(this.detach_MstDiscounts));
			this._MstDiscounts1 = new EntitySet<MstDiscount>(new Action<MstDiscount>(this.attach_MstDiscounts1), new Action<MstDiscount>(this.detach_MstDiscounts1));
			this._MstPayTypes = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes), new Action<MstPayType>(this.detach_MstPayTypes));
			this._MstPayTypes1 = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes1), new Action<MstPayType>(this.detach_MstPayTypes1));
			this._MstTaxes = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes), new Action<MstTax>(this.detach_MstTaxes));
			this._MstTaxes1 = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes1), new Action<MstTax>(this.detach_MstTaxes1));
			this._MstTerms = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms), new Action<MstTerm>(this.detach_MstTerms));
			this._MstTerms1 = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms1), new Action<MstTerm>(this.detach_MstTerms1));
			this._MstUnits = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits), new Action<MstUnit>(this.detach_MstUnits));
			this._MstUnits1 = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits1), new Action<MstUnit>(this.detach_MstUnits1));
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollections1 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections1), new Action<TrnCollection>(this.detach_TrnCollections1));
			this._TrnCollections2 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections2), new Action<TrnCollection>(this.detach_TrnCollections2));
			this._TrnCollections3 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections3), new Action<TrnCollection>(this.detach_TrnCollections3));
			this._TrnCollections4 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections4), new Action<TrnCollection>(this.detach_TrnCollections4));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursements1 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements1), new Action<TrnDisbursement>(this.detach_TrnDisbursements1));
			this._TrnDisbursements2 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements2), new Action<TrnDisbursement>(this.detach_TrnDisbursements2));
			this._TrnDisbursements3 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements3), new Action<TrnDisbursement>(this.detach_TrnDisbursements3));
			this._TrnDisbursements4 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements4), new Action<TrnDisbursement>(this.detach_TrnDisbursements4));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnPurchaseOrders1 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders1), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders1));
			this._TrnPurchaseOrders2 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders2), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders2));
			this._TrnPurchaseOrders3 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders3), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders3));
			this._TrnPurchaseOrders4 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders4), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders4));
			this._TrnPurchaseOrders5 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders5), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders5));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnReceivingReceipts1 = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts1), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts1));
			this._TrnReceivingReceipts2 = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts2), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts2));
			this._TrnReceivingReceipts3 = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts3), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts3));
			this._TrnReceivingReceipts4 = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts4), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts4));
			this._TrnReceivingReceipts5 = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts5), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts5));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesInvoices1 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices1), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices1));
			this._TrnSalesInvoices2 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices2), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices2));
			this._TrnSalesInvoices3 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices3), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices3));
			this._TrnSalesInvoices4 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices4), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices4));
			this._TrnSalesInvoices5 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices5), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices5));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnSalesOrders1 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders1), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders1));
			this._TrnSalesOrders2 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders2), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders2));
			this._TrnSalesOrders3 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders3), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders3));
			this._TrnSalesOrders4 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders4), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders4));
			this._TrnSalesOrders5 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders5), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders5));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockIns1 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns1), new Action<TrnStockIn>(this.detach_TrnStockIns1));
			this._TrnStockIns2 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns2), new Action<TrnStockIn>(this.detach_TrnStockIns2));
			this._TrnStockIns3 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns3), new Action<TrnStockIn>(this.detach_TrnStockIns3));
			this._TrnStockIns4 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns4), new Action<TrnStockIn>(this.detach_TrnStockIns4));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockOuts1 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts1), new Action<TrnStockOut>(this.detach_TrnStockOuts1));
			this._TrnStockOuts2 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts2), new Action<TrnStockOut>(this.detach_TrnStockOuts2));
			this._TrnStockOuts3 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts3), new Action<TrnStockOut>(this.detach_TrnStockOuts3));
			this._TrnStockOuts4 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts4), new Action<TrnStockOut>(this.detach_TrnStockOuts4));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._TrnStockTransfers1 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers1), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers1));
			this._TrnStockTransfers2 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers2), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers2));
			this._TrnStockTransfers3 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers3), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers3));
			this._TrnStockTransfers4 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers4), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers4));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstCompany = default(EntityRef<MstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount1", Storage="_MstAccounts1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstAccount> MstAccounts1
		{
			get
			{
				return this._MstAccounts1;
			}
			set
			{
				this._MstAccounts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory", Storage="_MstAccountCategories", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstAccountCategory> MstAccountCategories
		{
			get
			{
				return this._MstAccountCategories;
			}
			set
			{
				this._MstAccountCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory1", Storage="_MstAccountCategories1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstAccountCategory> MstAccountCategories1
		{
			get
			{
				return this._MstAccountCategories1;
			}
			set
			{
				this._MstAccountCategories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType", Storage="_MstAccountTypes", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstAccountType> MstAccountTypes
		{
			get
			{
				return this._MstAccountTypes;
			}
			set
			{
				this._MstAccountTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType1", Storage="_MstAccountTypes1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstAccountType> MstAccountTypes1
		{
			get
			{
				return this._MstAccountTypes1;
			}
			set
			{
				this._MstAccountTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany", Storage="_MstCompanies", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstCompany> MstCompanies
		{
			get
			{
				return this._MstCompanies;
			}
			set
			{
				this._MstCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany1", Storage="_MstCompanies1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstCompany> MstCompanies1
		{
			get
			{
				return this._MstCompanies1;
			}
			set
			{
				this._MstCompanies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount", Storage="_MstDiscounts", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstDiscount> MstDiscounts
		{
			get
			{
				return this._MstDiscounts;
			}
			set
			{
				this._MstDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount1", Storage="_MstDiscounts1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstDiscount> MstDiscounts1
		{
			get
			{
				return this._MstDiscounts1;
			}
			set
			{
				this._MstDiscounts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType", Storage="_MstPayTypes", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstPayType> MstPayTypes
		{
			get
			{
				return this._MstPayTypes;
			}
			set
			{
				this._MstPayTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType1", Storage="_MstPayTypes1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstPayType> MstPayTypes1
		{
			get
			{
				return this._MstPayTypes1;
			}
			set
			{
				this._MstPayTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax", Storage="_MstTaxes", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstTax> MstTaxes
		{
			get
			{
				return this._MstTaxes;
			}
			set
			{
				this._MstTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax1", Storage="_MstTaxes1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstTax> MstTaxes1
		{
			get
			{
				return this._MstTaxes1;
			}
			set
			{
				this._MstTaxes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm", Storage="_MstTerms", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstTerm> MstTerms
		{
			get
			{
				return this._MstTerms;
			}
			set
			{
				this._MstTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm1", Storage="_MstTerms1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstTerm> MstTerms1
		{
			get
			{
				return this._MstTerms1;
			}
			set
			{
				this._MstTerms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUnits", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstUnit> MstUnits
		{
			get
			{
				return this._MstUnits;
			}
			set
			{
				this._MstUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUnits1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstUnit> MstUnits1
		{
			get
			{
				return this._MstUnits1;
			}
			set
			{
				this._MstUnits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_TrnCollections1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnCollection> TrnCollections1
		{
			get
			{
				return this._TrnCollections1;
			}
			set
			{
				this._TrnCollections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_TrnCollections2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnCollection> TrnCollections2
		{
			get
			{
				return this._TrnCollections2;
			}
			set
			{
				this._TrnCollections2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_TrnCollections3", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnCollection> TrnCollections3
		{
			get
			{
				return this._TrnCollections3;
			}
			set
			{
				this._TrnCollections3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_TrnCollections4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnCollection> TrnCollections4
		{
			get
			{
				return this._TrnCollections4;
			}
			set
			{
				this._TrnCollections4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement1", Storage="_TrnDisbursements1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements1
		{
			get
			{
				return this._TrnDisbursements1;
			}
			set
			{
				this._TrnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement2", Storage="_TrnDisbursements2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements2
		{
			get
			{
				return this._TrnDisbursements2;
			}
			set
			{
				this._TrnDisbursements2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement3", Storage="_TrnDisbursements3", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements3
		{
			get
			{
				return this._TrnDisbursements3;
			}
			set
			{
				this._TrnDisbursements3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement4", Storage="_TrnDisbursements4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements4
		{
			get
			{
				return this._TrnDisbursements4;
			}
			set
			{
				this._TrnDisbursements4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="RequestedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder1", Storage="_TrnPurchaseOrders1", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders1
		{
			get
			{
				return this._TrnPurchaseOrders1;
			}
			set
			{
				this._TrnPurchaseOrders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder2", Storage="_TrnPurchaseOrders2", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders2
		{
			get
			{
				return this._TrnPurchaseOrders2;
			}
			set
			{
				this._TrnPurchaseOrders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder3", Storage="_TrnPurchaseOrders3", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders3
		{
			get
			{
				return this._TrnPurchaseOrders3;
			}
			set
			{
				this._TrnPurchaseOrders3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder4", Storage="_TrnPurchaseOrders4", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders4
		{
			get
			{
				return this._TrnPurchaseOrders4;
			}
			set
			{
				this._TrnPurchaseOrders4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder5", Storage="_TrnPurchaseOrders5", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders5
		{
			get
			{
				return this._TrnPurchaseOrders5;
			}
			set
			{
				this._TrnPurchaseOrders5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="ReceivedBy")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt1", Storage="_TrnReceivingReceipts1", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts1
		{
			get
			{
				return this._TrnReceivingReceipts1;
			}
			set
			{
				this._TrnReceivingReceipts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt2", Storage="_TrnReceivingReceipts2", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts2
		{
			get
			{
				return this._TrnReceivingReceipts2;
			}
			set
			{
				this._TrnReceivingReceipts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt3", Storage="_TrnReceivingReceipts3", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts3
		{
			get
			{
				return this._TrnReceivingReceipts3;
			}
			set
			{
				this._TrnReceivingReceipts3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt4", Storage="_TrnReceivingReceipts4", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts4
		{
			get
			{
				return this._TrnReceivingReceipts4;
			}
			set
			{
				this._TrnReceivingReceipts4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt5", Storage="_TrnReceivingReceipts5", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts5
		{
			get
			{
				return this._TrnReceivingReceipts5;
			}
			set
			{
				this._TrnReceivingReceipts5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice1", Storage="_TrnSalesInvoices1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices1
		{
			get
			{
				return this._TrnSalesInvoices1;
			}
			set
			{
				this._TrnSalesInvoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice2", Storage="_TrnSalesInvoices2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices2
		{
			get
			{
				return this._TrnSalesInvoices2;
			}
			set
			{
				this._TrnSalesInvoices2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice3", Storage="_TrnSalesInvoices3", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices3
		{
			get
			{
				return this._TrnSalesInvoices3;
			}
			set
			{
				this._TrnSalesInvoices3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice4", Storage="_TrnSalesInvoices4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices4
		{
			get
			{
				return this._TrnSalesInvoices4;
			}
			set
			{
				this._TrnSalesInvoices4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice5", Storage="_TrnSalesInvoices5", ThisKey="Id", OtherKey="SoldBy")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices5
		{
			get
			{
				return this._TrnSalesInvoices5;
			}
			set
			{
				this._TrnSalesInvoices5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="SoldBy")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder1", Storage="_TrnSalesOrders1", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders1
		{
			get
			{
				return this._TrnSalesOrders1;
			}
			set
			{
				this._TrnSalesOrders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder2", Storage="_TrnSalesOrders2", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders2
		{
			get
			{
				return this._TrnSalesOrders2;
			}
			set
			{
				this._TrnSalesOrders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder3", Storage="_TrnSalesOrders3", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders3
		{
			get
			{
				return this._TrnSalesOrders3;
			}
			set
			{
				this._TrnSalesOrders3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder4", Storage="_TrnSalesOrders4", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders4
		{
			get
			{
				return this._TrnSalesOrders4;
			}
			set
			{
				this._TrnSalesOrders4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder5", Storage="_TrnSalesOrders5", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders5
		{
			get
			{
				return this._TrnSalesOrders5;
			}
			set
			{
				this._TrnSalesOrders5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn1", Storage="_TrnStockIns1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnStockIn> TrnStockIns1
		{
			get
			{
				return this._TrnStockIns1;
			}
			set
			{
				this._TrnStockIns1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn2", Storage="_TrnStockIns2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnStockIn> TrnStockIns2
		{
			get
			{
				return this._TrnStockIns2;
			}
			set
			{
				this._TrnStockIns2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn3", Storage="_TrnStockIns3", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnStockIn> TrnStockIns3
		{
			get
			{
				return this._TrnStockIns3;
			}
			set
			{
				this._TrnStockIns3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn4", Storage="_TrnStockIns4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnStockIn> TrnStockIns4
		{
			get
			{
				return this._TrnStockIns4;
			}
			set
			{
				this._TrnStockIns4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut1", Storage="_TrnStockOuts1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts1
		{
			get
			{
				return this._TrnStockOuts1;
			}
			set
			{
				this._TrnStockOuts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut2", Storage="_TrnStockOuts2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts2
		{
			get
			{
				return this._TrnStockOuts2;
			}
			set
			{
				this._TrnStockOuts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut3", Storage="_TrnStockOuts3", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts3
		{
			get
			{
				return this._TrnStockOuts3;
			}
			set
			{
				this._TrnStockOuts3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut4", Storage="_TrnStockOuts4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts4
		{
			get
			{
				return this._TrnStockOuts4;
			}
			set
			{
				this._TrnStockOuts4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer1", Storage="_TrnStockTransfers1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers1
		{
			get
			{
				return this._TrnStockTransfers1;
			}
			set
			{
				this._TrnStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer2", Storage="_TrnStockTransfers2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers2
		{
			get
			{
				return this._TrnStockTransfers2;
			}
			set
			{
				this._TrnStockTransfers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer3", Storage="_TrnStockTransfers3", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers3
		{
			get
			{
				return this._TrnStockTransfers3;
			}
			set
			{
				this._TrnStockTransfers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer4", Storage="_TrnStockTransfers4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers4
		{
			get
			{
				return this._TrnStockTransfers4;
			}
			set
			{
				this._TrnStockTransfers4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstUser", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstUser", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccounts1(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccounts1(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstAccountCategories(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccountCategories(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccountCategories1(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccountCategories1(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccountTypes1(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccountTypes1(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstCompanies(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCompanies(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCompanies1(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCompanies1(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstDiscounts(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstDiscounts(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstDiscounts1(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstDiscounts1(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstPayTypes1(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstPayTypes1(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTaxes1(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTaxes1(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTerms(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTerms(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTerms1(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTerms1(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnDisbursements2(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnDisbursements2(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnDisbursements3(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnDisbursements3(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnDisbursements4(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnDisbursements4(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPurchaseOrders1(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPurchaseOrders1(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPurchaseOrders2(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPurchaseOrders2(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPurchaseOrders3(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPurchaseOrders3(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPurchaseOrders4(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPurchaseOrders4(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPurchaseOrders5(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnPurchaseOrders5(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnReceivingReceipts1(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnReceivingReceipts1(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnReceivingReceipts2(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnReceivingReceipts2(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnReceivingReceipts3(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnReceivingReceipts3(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnReceivingReceipts4(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnReceivingReceipts4(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnReceivingReceipts5(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnReceivingReceipts5(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSalesInvoices1(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSalesInvoices1(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSalesInvoices2(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSalesInvoices2(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSalesInvoices3(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSalesInvoices3(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSalesInvoices4(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSalesInvoices4(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSalesInvoices5(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnSalesInvoices5(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSalesOrders1(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSalesOrders1(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSalesOrders2(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSalesOrders2(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSalesOrders3(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSalesOrders3(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSalesOrders4(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSalesOrders4(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSalesOrders5(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnSalesOrders5(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockIns1(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockIns1(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockIns2(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockIns2(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockIns3(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockIns3(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockIns4(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockIns4(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockOuts1(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockOuts1(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockOuts2(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockOuts2(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockOuts3(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockOuts3(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockOuts4(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockOuts4(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockTransfers2(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockTransfers2(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockTransfers3(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockTransfers3(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockTransfers4(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockTransfers4(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserForm")]
	public partial class MstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FormId;
		
		private int _UserId;
		
		private bool _CanDelete;
		
		private bool _CanAdd;
		
		private bool _CanLock;
		
		private bool _CanUnlock;
		
		private bool _CanPrint;
		
		private bool _CanPreview;
		
		private bool _CanEdit;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<SysForm> _SysForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanLockChanging(bool value);
    partial void OnCanLockChanged();
    partial void OnCanUnlockChanging(bool value);
    partial void OnCanUnlockChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnCanPreviewChanging(bool value);
    partial void OnCanPreviewChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    #endregion
		
		public MstUserForm()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._SysForm = default(EntityRef<SysForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					if (this._SysForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLock", DbType="Bit NOT NULL")]
		public bool CanLock
		{
			get
			{
				return this._CanLock;
			}
			set
			{
				if ((this._CanLock != value))
				{
					this.OnCanLockChanging(value);
					this.SendPropertyChanging();
					this._CanLock = value;
					this.SendPropertyChanged("CanLock");
					this.OnCanLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUnlock", DbType="Bit NOT NULL")]
		public bool CanUnlock
		{
			get
			{
				return this._CanUnlock;
			}
			set
			{
				if ((this._CanUnlock != value))
				{
					this.OnCanUnlockChanging(value);
					this.SendPropertyChanging();
					this._CanUnlock = value;
					this.SendPropertyChanged("CanUnlock");
					this.OnCanUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPreview", DbType="Bit NOT NULL")]
		public bool CanPreview
		{
			get
			{
				return this._CanPreview;
			}
			set
			{
				if ((this._CanPreview != value))
				{
					this.OnCanPreviewChanging(value);
					this.SendPropertyChanging();
					this._CanPreview = value;
					this.SendPropertyChanged("CanPreview");
					this.OnCanPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_SysForm", ThisKey="FormId", OtherKey="Id", IsForeignKey=true)]
		public SysForm SysForm
		{
			get
			{
				return this._SysForm.Entity;
			}
			set
			{
				SysForm previousValue = this._SysForm.Entity;
				if (((previousValue != value) 
							|| (this._SysForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysForm.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._SysForm.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._FormId = value.Id;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("SysForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysForm")]
	public partial class SysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Form;
		
		private string _FormDescription;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnFormDescriptionChanging(string value);
    partial void OnFormDescriptionChanged();
    #endregion
		
		public SysForm()
		{
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FormDescription
		{
			get
			{
				return this._FormDescription;
			}
			set
			{
				if ((this._FormDescription != value))
				{
					this.OnFormDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FormDescription = value;
					this.SendPropertyChanged("FormDescription");
					this.OnFormDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="FormId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollection")]
	public partial class TrnCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _ORNumber;
		
		private System.DateTime _ORDate;
		
		private string _ManualORNumber;
		
		private int _CustomerId;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsCancelled;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnORNumberChanging(string value);
    partial void OnORNumberChanged();
    partial void OnORDateChanging(System.DateTime value);
    partial void OnORDateChanged();
    partial void OnManualORNumberChanging(string value);
    partial void OnManualORNumberChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnCollection()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ORNumber
		{
			get
			{
				return this._ORNumber;
			}
			set
			{
				if ((this._ORNumber != value))
				{
					this.OnORNumberChanging(value);
					this.SendPropertyChanging();
					this._ORNumber = value;
					this.SendPropertyChanged("ORNumber");
					this.OnORNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDate", DbType="DateTime NOT NULL")]
		public System.DateTime ORDate
		{
			get
			{
				return this._ORDate;
			}
			set
			{
				if ((this._ORDate != value))
				{
					this.OnORDateChanging(value);
					this.SendPropertyChanging();
					this._ORDate = value;
					this.SendPropertyChanged("ORDate");
					this.OnORDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualORNumber", DbType="NVarChar(50)")]
		public string ManualORNumber
		{
			get
			{
				return this._ManualORNumber;
			}
			set
			{
				if ((this._ManualORNumber != value))
				{
					this.OnManualORNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualORNumber = value;
					this.SendPropertyChanged("ManualORNumber");
					this.OnManualORNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollection", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollection", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnCollections1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnCollections1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnCollections2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnCollections2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_MstUser3", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnCollections3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnCollections3.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnCollections4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnCollections4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollectionLine")]
	public partial class TrnCollectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ORId;
		
		private int _ArticleGroupId;
		
		private System.Nullable<int> _SIId;
		
		private decimal _Amount;
		
		private int _PayTypeId;
		
		private string _CheckNumber;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _CheckBank;
		
		private string _CreditCardVerificationCode;
		
		private string _CreditCardNumber;
		
		private string _CreditCardType;
		
		private string _CreditCardBank;
		
		private string _CreditCardReferenceNumber;
		
		private string _CreditCardHolderName;
		
		private string _CreditCardExpiry;
		
		private string _GiftCertificateNumber;
		
		private string _OtherInformation;
		
		private EntityRef<MstArticleGroup> _MstArticleGroup;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnORIdChanging(int value);
    partial void OnORIdChanged();
    partial void OnArticleGroupIdChanging(int value);
    partial void OnArticleGroupIdChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnCheckBankChanging(string value);
    partial void OnCheckBankChanged();
    partial void OnCreditCardVerificationCodeChanging(string value);
    partial void OnCreditCardVerificationCodeChanged();
    partial void OnCreditCardNumberChanging(string value);
    partial void OnCreditCardNumberChanged();
    partial void OnCreditCardTypeChanging(string value);
    partial void OnCreditCardTypeChanged();
    partial void OnCreditCardBankChanging(string value);
    partial void OnCreditCardBankChanged();
    partial void OnCreditCardReferenceNumberChanging(string value);
    partial void OnCreditCardReferenceNumberChanged();
    partial void OnCreditCardHolderNameChanging(string value);
    partial void OnCreditCardHolderNameChanged();
    partial void OnCreditCardExpiryChanging(string value);
    partial void OnCreditCardExpiryChanged();
    partial void OnGiftCertificateNumberChanging(string value);
    partial void OnGiftCertificateNumberChanged();
    partial void OnOtherInformationChanging(string value);
    partial void OnOtherInformationChanged();
    #endregion
		
		public TrnCollectionLine()
		{
			this._MstArticleGroup = default(EntityRef<MstArticleGroup>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="Int NOT NULL")]
		public int ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroupId", DbType="Int NOT NULL")]
		public int ArticleGroupId
		{
			get
			{
				return this._ArticleGroupId;
			}
			set
			{
				if ((this._ArticleGroupId != value))
				{
					if (this._MstArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroupId = value;
					this.SendPropertyChanged("ArticleGroupId");
					this.OnArticleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50)")]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBank", DbType="NVarChar(50)")]
		public string CheckBank
		{
			get
			{
				return this._CheckBank;
			}
			set
			{
				if ((this._CheckBank != value))
				{
					this.OnCheckBankChanging(value);
					this.SendPropertyChanging();
					this._CheckBank = value;
					this.SendPropertyChanged("CheckBank");
					this.OnCheckBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardVerificationCode", DbType="NVarChar(50)")]
		public string CreditCardVerificationCode
		{
			get
			{
				return this._CreditCardVerificationCode;
			}
			set
			{
				if ((this._CreditCardVerificationCode != value))
				{
					this.OnCreditCardVerificationCodeChanging(value);
					this.SendPropertyChanging();
					this._CreditCardVerificationCode = value;
					this.SendPropertyChanged("CreditCardVerificationCode");
					this.OnCreditCardVerificationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardNumber", DbType="NVarChar(50)")]
		public string CreditCardNumber
		{
			get
			{
				return this._CreditCardNumber;
			}
			set
			{
				if ((this._CreditCardNumber != value))
				{
					this.OnCreditCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CreditCardNumber = value;
					this.SendPropertyChanged("CreditCardNumber");
					this.OnCreditCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardType", DbType="NVarChar(50)")]
		public string CreditCardType
		{
			get
			{
				return this._CreditCardType;
			}
			set
			{
				if ((this._CreditCardType != value))
				{
					this.OnCreditCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCardType = value;
					this.SendPropertyChanged("CreditCardType");
					this.OnCreditCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardBank", DbType="NVarChar(50)")]
		public string CreditCardBank
		{
			get
			{
				return this._CreditCardBank;
			}
			set
			{
				if ((this._CreditCardBank != value))
				{
					this.OnCreditCardBankChanging(value);
					this.SendPropertyChanging();
					this._CreditCardBank = value;
					this.SendPropertyChanged("CreditCardBank");
					this.OnCreditCardBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardReferenceNumber", DbType="NVarChar(50)")]
		public string CreditCardReferenceNumber
		{
			get
			{
				return this._CreditCardReferenceNumber;
			}
			set
			{
				if ((this._CreditCardReferenceNumber != value))
				{
					this.OnCreditCardReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._CreditCardReferenceNumber = value;
					this.SendPropertyChanged("CreditCardReferenceNumber");
					this.OnCreditCardReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardHolderName", DbType="NVarChar(100)")]
		public string CreditCardHolderName
		{
			get
			{
				return this._CreditCardHolderName;
			}
			set
			{
				if ((this._CreditCardHolderName != value))
				{
					this.OnCreditCardHolderNameChanging(value);
					this.SendPropertyChanging();
					this._CreditCardHolderName = value;
					this.SendPropertyChanged("CreditCardHolderName");
					this.OnCreditCardHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardExpiry", DbType="NVarChar(50)")]
		public string CreditCardExpiry
		{
			get
			{
				return this._CreditCardExpiry;
			}
			set
			{
				if ((this._CreditCardExpiry != value))
				{
					this.OnCreditCardExpiryChanging(value);
					this.SendPropertyChanging();
					this._CreditCardExpiry = value;
					this.SendPropertyChanged("CreditCardExpiry");
					this.OnCreditCardExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCertificateNumber", DbType="NVarChar(50)")]
		public string GiftCertificateNumber
		{
			get
			{
				return this._GiftCertificateNumber;
			}
			set
			{
				if ((this._GiftCertificateNumber != value))
				{
					this.OnGiftCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._GiftCertificateNumber = value;
					this.SendPropertyChanged("GiftCertificateNumber");
					this.OnGiftCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInformation", DbType="NVarChar(255)")]
		public string OtherInformation
		{
			get
			{
				return this._OtherInformation;
			}
			set
			{
				if ((this._OtherInformation != value))
				{
					this.OnOtherInformationChanging(value);
					this.SendPropertyChanging();
					this._OtherInformation = value;
					this.SendPropertyChanged("OtherInformation");
					this.OnOtherInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_TrnCollectionLine", Storage="_MstArticleGroup", ThisKey="ArticleGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleGroup MstArticleGroup
		{
			get
			{
				return this._MstArticleGroup.Entity;
			}
			set
			{
				MstArticleGroup previousValue = this._MstArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleGroup.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstArticleGroup.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._ArticleGroupId = value.Id;
					}
					else
					{
						this._ArticleGroupId = default(int);
					}
					this.SendPropertyChanged("MstArticleGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(int);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnCollectionLine", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursement")]
	public partial class TrnDisbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _CVNumber;
		
		private System.DateTime _CVDate;
		
		private string _ManualCVNumber;
		
		private int _SupplierId;
		
		private string _Payee;
		
		private int _PayTypeId;
		
		private int _BankId;
		
		private string _Remarks;
		
		private decimal _Amount;
		
		private string _CheckNumber;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private bool _IsCrossCheck;
		
		private bool _IsClear;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnCVNumberChanging(string value);
    partial void OnCVNumberChanged();
    partial void OnCVDateChanging(System.DateTime value);
    partial void OnCVDateChanged();
    partial void OnManualCVNumberChanging(string value);
    partial void OnManualCVNumberChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnBankIdChanging(int value);
    partial void OnBankIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnIsCrossCheckChanging(bool value);
    partial void OnIsCrossCheckChanged();
    partial void OnIsClearChanging(bool value);
    partial void OnIsClearChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnDisbursement()
		{
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CVNumber
		{
			get
			{
				return this._CVNumber;
			}
			set
			{
				if ((this._CVNumber != value))
				{
					this.OnCVNumberChanging(value);
					this.SendPropertyChanging();
					this._CVNumber = value;
					this.SendPropertyChanged("CVNumber");
					this.OnCVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVDate", DbType="DateTime NOT NULL")]
		public System.DateTime CVDate
		{
			get
			{
				return this._CVDate;
			}
			set
			{
				if ((this._CVDate != value))
				{
					this.OnCVDateChanging(value);
					this.SendPropertyChanging();
					this._CVDate = value;
					this.SendPropertyChanged("CVDate");
					this.OnCVDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualCVNumber", DbType="NVarChar(50)")]
		public string ManualCVNumber
		{
			get
			{
				return this._ManualCVNumber;
			}
			set
			{
				if ((this._ManualCVNumber != value))
				{
					this.OnManualCVNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualCVNumber = value;
					this.SendPropertyChanged("ManualCVNumber");
					this.OnManualCVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payee", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._Payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="Int NOT NULL")]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50)")]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCrossCheck", DbType="Bit NOT NULL")]
		public bool IsCrossCheck
		{
			get
			{
				return this._IsCrossCheck;
			}
			set
			{
				if ((this._IsCrossCheck != value))
				{
					this.OnIsCrossCheckChanging(value);
					this.SendPropertyChanging();
					this._IsCrossCheck = value;
					this.SendPropertyChanged("IsCrossCheck");
					this.OnIsCrossCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClear", DbType="Bit NOT NULL")]
		public bool IsClear
		{
			get
			{
				return this._IsClear;
			}
			set
			{
				if ((this._IsClear != value))
				{
					this.OnIsClearChanging(value);
					this.SendPropertyChanging();
					this._IsClear = value;
					this.SendPropertyChanged("IsClear");
					this.OnIsClearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="CVId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement1", Storage="_MstArticle1", ThisKey="BankId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.TrnDisbursements1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements1.Add(this);
						this._BankId = value.Id;
					}
					else
					{
						this._BankId = default(int);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursement", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnDisbursements1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnDisbursements2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement3", Storage="_MstUser3", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnDisbursements3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements3.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnDisbursements4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursementLine")]
	public partial class TrnDisbursementLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CVId;
		
		private int _ArticleGroupId;
		
		private System.Nullable<int> _RRId;
		
		private decimal _Amount;
		
		private string _OtherInformation;
		
		private EntityRef<MstArticleGroup> _MstArticleGroup;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCVIdChanging(int value);
    partial void OnCVIdChanged();
    partial void OnArticleGroupIdChanging(int value);
    partial void OnArticleGroupIdChanged();
    partial void OnRRIdChanging(System.Nullable<int> value);
    partial void OnRRIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnOtherInformationChanging(string value);
    partial void OnOtherInformationChanged();
    #endregion
		
		public TrnDisbursementLine()
		{
			this._MstArticleGroup = default(EntityRef<MstArticleGroup>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVId", DbType="Int NOT NULL")]
		public int CVId
		{
			get
			{
				return this._CVId;
			}
			set
			{
				if ((this._CVId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIdChanging(value);
					this.SendPropertyChanging();
					this._CVId = value;
					this.SendPropertyChanged("CVId");
					this.OnCVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroupId", DbType="Int NOT NULL")]
		public int ArticleGroupId
		{
			get
			{
				return this._ArticleGroupId;
			}
			set
			{
				if ((this._ArticleGroupId != value))
				{
					if (this._MstArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroupId = value;
					this.SendPropertyChanged("ArticleGroupId");
					this.OnArticleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int")]
		public System.Nullable<int> RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInformation", DbType="NVarChar(255)")]
		public string OtherInformation
		{
			get
			{
				return this._OtherInformation;
			}
			set
			{
				if ((this._OtherInformation != value))
				{
					this.OnOtherInformationChanging(value);
					this.SendPropertyChanging();
					this._OtherInformation = value;
					this.SendPropertyChanged("OtherInformation");
					this.OnOtherInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_TrnDisbursementLine", Storage="_MstArticleGroup", ThisKey="ArticleGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleGroup MstArticleGroup
		{
			get
			{
				return this._MstArticleGroup.Entity;
			}
			set
			{
				MstArticleGroup previousValue = this._MstArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleGroup.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._MstArticleGroup.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._ArticleGroupId = value.Id;
					}
					else
					{
						this._ArticleGroupId = default(int);
					}
					this.SendPropertyChanged("MstArticleGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnDisbursementLine", Storage="_TrnDisbursement", ThisKey="CVId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._CVId = value.Id;
					}
					else
					{
						this._CVId = default(int);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnDisbursementLine", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true)]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnInventory")]
	public partial class TrnInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private System.DateTime _InventoryDate;
		
		private int _ItemId;
		
		private int _ItemInventoryId;
		
		private decimal _QuantityIn;
		
		private decimal _QuantityOut;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private System.Nullable<int> _RRId;
		
		private System.Nullable<int> _SIId;
		
		private System.Nullable<int> _INId;
		
		private System.Nullable<int> _OTId;
		
		private System.Nullable<int> _STId;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnInventoryDateChanging(System.DateTime value);
    partial void OnInventoryDateChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(int value);
    partial void OnItemInventoryIdChanged();
    partial void OnQuantityInChanging(decimal value);
    partial void OnQuantityInChanged();
    partial void OnQuantityOutChanging(decimal value);
    partial void OnQuantityOutChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnRRIdChanging(System.Nullable<int> value);
    partial void OnRRIdChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnINIdChanging(System.Nullable<int> value);
    partial void OnINIdChanged();
    partial void OnOTIdChanging(System.Nullable<int> value);
    partial void OnOTIdChanged();
    partial void OnSTIdChanging(System.Nullable<int> value);
    partial void OnSTIdChanged();
    #endregion
		
		public TrnInventory()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDate", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryDate
		{
			get
			{
				return this._InventoryDate;
			}
			set
			{
				if ((this._InventoryDate != value))
				{
					this.OnInventoryDateChanging(value);
					this.SendPropertyChanging();
					this._InventoryDate = value;
					this.SendPropertyChanged("InventoryDate");
					this.OnInventoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int NOT NULL")]
		public int ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityIn", DbType="Decimal(18,5) NOT NULL")]
		public decimal QuantityIn
		{
			get
			{
				return this._QuantityIn;
			}
			set
			{
				if ((this._QuantityIn != value))
				{
					this.OnQuantityInChanging(value);
					this.SendPropertyChanging();
					this._QuantityIn = value;
					this.SendPropertyChanged("QuantityIn");
					this.OnQuantityInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOut", DbType="Decimal(18,5) NOT NULL")]
		public decimal QuantityOut
		{
			get
			{
				return this._QuantityOut;
			}
			set
			{
				if ((this._QuantityOut != value))
				{
					this.OnQuantityOutChanging(value);
					this.SendPropertyChanging();
					this._QuantityOut = value;
					this.SendPropertyChanged("QuantityOut");
					this.OnQuantityOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int")]
		public System.Nullable<int> RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="Int")]
		public System.Nullable<int> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="Int")]
		public System.Nullable<int> OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="Int")]
		public System.Nullable<int> STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnInventory", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnInventory", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(int);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnInventory", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnInventory", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true)]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnInventory", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnInventory", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnInventory", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnInventory", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournal")]
	public partial class TrnJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private System.DateTime _JournalDate;
		
		private string _JournalRefDocument;
		
		private int _AccountId;
		
		private string _Particulars;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private System.Nullable<int> _SIId;
		
		private System.Nullable<int> _INId;
		
		private System.Nullable<int> _OTId;
		
		private System.Nullable<int> _ORId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnJournalRefDocumentChanging(string value);
    partial void OnJournalRefDocumentChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnINIdChanging(System.Nullable<int> value);
    partial void OnINIdChanged();
    partial void OnOTIdChanging(System.Nullable<int> value);
    partial void OnOTIdChanged();
    partial void OnORIdChanging(System.Nullable<int> value);
    partial void OnORIdChanged();
    #endregion
		
		public TrnJournal()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalRefDocument", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JournalRefDocument
		{
			get
			{
				return this._JournalRefDocument;
			}
			set
			{
				if ((this._JournalRefDocument != value))
				{
					this.OnJournalRefDocumentChanging(value);
					this.SendPropertyChanging();
					this._JournalRefDocument = value;
					this.SendPropertyChanged("JournalRefDocument");
					this.OnJournalRefDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="Int")]
		public System.Nullable<int> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="Int")]
		public System.Nullable<int> OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="Int")]
		public System.Nullable<int> ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournal", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true)]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true)]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrder")]
	public partial class TrnPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _PONumber;
		
		private System.DateTime _PODate;
		
		private string _ManualPONumber;
		
		private int _SupplierId;
		
		private int _TermId;
		
		private System.DateTime _DateNeeded;
		
		private string _Remarks;
		
		private bool _IsClose;
		
		private int _RequestedBy;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnPurchaseOrderItem> _TrnPurchaseOrderItems;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPODateChanging(System.DateTime value);
    partial void OnPODateChanged();
    partial void OnManualPONumberChanging(string value);
    partial void OnManualPONumberChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnDateNeededChanging(System.DateTime value);
    partial void OnDateNeededChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsCloseChanging(bool value);
    partial void OnIsCloseChanged();
    partial void OnRequestedByChanging(int value);
    partial void OnRequestedByChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnPurchaseOrder()
		{
			this._TrnPurchaseOrderItems = new EntitySet<TrnPurchaseOrderItem>(new Action<TrnPurchaseOrderItem>(this.attach_TrnPurchaseOrderItems), new Action<TrnPurchaseOrderItem>(this.detach_TrnPurchaseOrderItems));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime NOT NULL")]
		public System.DateTime PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualPONumber", DbType="NVarChar(50)")]
		public string ManualPONumber
		{
			get
			{
				return this._ManualPONumber;
			}
			set
			{
				if ((this._ManualPONumber != value))
				{
					this.OnManualPONumberChanging(value);
					this.SendPropertyChanging();
					this._ManualPONumber = value;
					this.SendPropertyChanged("ManualPONumber");
					this.OnManualPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNeeded", DbType="DateTime NOT NULL")]
		public System.DateTime DateNeeded
		{
			get
			{
				return this._DateNeeded;
			}
			set
			{
				if ((this._DateNeeded != value))
				{
					this.OnDateNeededChanging(value);
					this.SendPropertyChanging();
					this._DateNeeded = value;
					this.SendPropertyChanged("DateNeeded");
					this.OnDateNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClose", DbType="Bit NOT NULL")]
		public bool IsClose
		{
			get
			{
				return this._IsClose;
			}
			set
			{
				if ((this._IsClose != value))
				{
					this.OnIsCloseChanging(value);
					this.SendPropertyChanging();
					this._IsClose = value;
					this.SendPropertyChanged("IsClose");
					this.OnIsCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedBy", DbType="Int NOT NULL")]
		public int RequestedBy
		{
			get
			{
				return this._RequestedBy;
			}
			set
			{
				if ((this._RequestedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestedByChanging(value);
					this.SendPropertyChanging();
					this._RequestedBy = value;
					this.SendPropertyChanged("RequestedBy");
					this.OnRequestedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrderItems", ThisKey="Id", OtherKey="POId")]
		public EntitySet<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this._TrnPurchaseOrderItems;
			}
			set
			{
				this._TrnPurchaseOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="POId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrder", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseOrder", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseOrder", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder", Storage="_MstUser", ThisKey="RequestedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._RequestedBy = value.Id;
					}
					else
					{
						this._RequestedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder1", Storage="_MstUser1", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPurchaseOrders1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders1.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder2", Storage="_MstUser2", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPurchaseOrders2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders2.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder3", Storage="_MstUser3", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPurchaseOrders3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders3.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder4", Storage="_MstUser4", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPurchaseOrders4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders4.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder5", Storage="_MstUser5", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnPurchaseOrders5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders5.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrderItem")]
	public partial class TrnPurchaseOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _POId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPOIdChanging(int value);
    partial void OnPOIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnPurchaseOrderItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POId", DbType="Int NOT NULL")]
		public int POId
		{
			get
			{
				return this._POId;
			}
			set
			{
				if ((this._POId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOIdChanging(value);
					this.SendPropertyChanging();
					this._POId = value;
					this.SendPropertyChanged("POId");
					this.OnPOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrderItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseOrderItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseOrderItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnPurchaseOrderItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrder", ThisKey="POId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnPurchaseOrderItems.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderItems.Add(this);
						this._POId = value.Id;
					}
					else
					{
						this._POId = default(int);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnReceivingReceipt")]
	public partial class TrnReceivingReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _RRNumber;
		
		private System.DateTime _RRDate;
		
		private string _ManualRRNumber;
		
		private int _SupplierId;
		
		private int _TermId;
		
		private string _Remarks;
		
		private int _ReceivedBy;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private decimal _Amount;
		
		private decimal _PaidAmount;
		
		private decimal _CreditAmount;
		
		private decimal _DebitAmount;
		
		private decimal _BalanceAmount;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnRRNumberChanging(string value);
    partial void OnRRNumberChanged();
    partial void OnRRDateChanging(System.DateTime value);
    partial void OnRRDateChanged();
    partial void OnManualRRNumberChanging(string value);
    partial void OnManualRRNumberChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnReceivedByChanging(int value);
    partial void OnReceivedByChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnReceivingReceipt()
		{
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RRNumber
		{
			get
			{
				return this._RRNumber;
			}
			set
			{
				if ((this._RRNumber != value))
				{
					this.OnRRNumberChanging(value);
					this.SendPropertyChanging();
					this._RRNumber = value;
					this.SendPropertyChanged("RRNumber");
					this.OnRRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRDate", DbType="DateTime NOT NULL")]
		public System.DateTime RRDate
		{
			get
			{
				return this._RRDate;
			}
			set
			{
				if ((this._RRDate != value))
				{
					this.OnRRDateChanging(value);
					this.SendPropertyChanging();
					this._RRDate = value;
					this.SendPropertyChanged("RRDate");
					this.OnRRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualRRNumber", DbType="NVarChar(50)")]
		public string ManualRRNumber
		{
			get
			{
				return this._ManualRRNumber;
			}
			set
			{
				if ((this._ManualRRNumber != value))
				{
					this.OnManualRRNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualRRNumber = value;
					this.SendPropertyChanged("ManualRRNumber");
					this.OnManualRRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedBy", DbType="Int NOT NULL")]
		public int ReceivedBy
		{
			get
			{
				return this._ReceivedBy;
			}
			set
			{
				if ((this._ReceivedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceivedByChanging(value);
					this.SendPropertyChanging();
					this._ReceivedBy = value;
					this.SendPropertyChanged("ReceivedBy");
					this.OnReceivedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceipt", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceipt", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnReceivingReceipt", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt", Storage="_MstUser", ThisKey="ReceivedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._ReceivedBy = value.Id;
					}
					else
					{
						this._ReceivedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt1", Storage="_MstUser1", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnReceivingReceipts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts1.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt2", Storage="_MstUser2", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnReceivingReceipts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts2.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt3", Storage="_MstUser3", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnReceivingReceipts3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts3.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt4", Storage="_MstUser4", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnReceivingReceipts4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts4.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnReceivingReceipt5", Storage="_MstUser5", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnReceivingReceipts5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts5.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnReceivingReceiptItem")]
	public partial class TrnReceivingReceiptItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RRId;
		
		private int _POId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _TaxId;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private int _BranchId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRRIdChanging(int value);
    partial void OnRRIdChanged();
    partial void OnPOIdChanging(int value);
    partial void OnPOIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxIdChanging(int value);
    partial void OnTaxIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnReceivingReceiptItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int NOT NULL")]
		public int RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POId", DbType="Int NOT NULL")]
		public int POId
		{
			get
			{
				return this._POId;
			}
			set
			{
				if ((this._POId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOIdChanging(value);
					this.SendPropertyChanging();
					this._POId = value;
					this.SendPropertyChanged("POId");
					this.OnPOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="Int NOT NULL")]
		public int TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceiptItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceiptItem", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnReceivingReceiptItem", Storage="_MstTax", ThisKey="TaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._TaxId = value.Id;
					}
					else
					{
						this._TaxId = default(int);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnReceivingReceiptItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnReceivingReceiptItem", Storage="_TrnPurchaseOrder", ThisKey="POId", OtherKey="Id", IsForeignKey=true)]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._POId = value.Id;
					}
					else
					{
						this._POId = default(int);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnReceivingReceiptItem", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(int);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoice")]
	public partial class TrnSalesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _SINumber;
		
		private System.DateTime _SIDate;
		
		private string _ManualSINumber;
		
		private int _CustomerId;
		
		private int _TermId;
		
		private string _Remarks;
		
		private int _SoldBy;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private decimal _Amount;
		
		private decimal _PaidAmount;
		
		private decimal _CreditAmount;
		
		private decimal _DebitAmount;
		
		private decimal _BalanceAmount;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSINumberChanging(string value);
    partial void OnSINumberChanged();
    partial void OnSIDateChanging(System.DateTime value);
    partial void OnSIDateChanged();
    partial void OnManualSINumberChanging(string value);
    partial void OnManualSINumberChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSoldByChanging(int value);
    partial void OnSoldByChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSalesInvoice()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SINumber
		{
			get
			{
				return this._SINumber;
			}
			set
			{
				if ((this._SINumber != value))
				{
					this.OnSINumberChanging(value);
					this.SendPropertyChanging();
					this._SINumber = value;
					this.SendPropertyChanged("SINumber");
					this.OnSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIDate", DbType="DateTime NOT NULL")]
		public System.DateTime SIDate
		{
			get
			{
				return this._SIDate;
			}
			set
			{
				if ((this._SIDate != value))
				{
					this.OnSIDateChanging(value);
					this.SendPropertyChanging();
					this._SIDate = value;
					this.SendPropertyChanged("SIDate");
					this.OnSIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualSINumber", DbType="NVarChar(50)")]
		public string ManualSINumber
		{
			get
			{
				return this._ManualSINumber;
			}
			set
			{
				if ((this._ManualSINumber != value))
				{
					this.OnManualSINumberChanging(value);
					this.SendPropertyChanging();
					this._ManualSINumber = value;
					this.SendPropertyChanged("ManualSINumber");
					this.OnManualSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldBy", DbType="Int NOT NULL")]
		public int SoldBy
		{
			get
			{
				return this._SoldBy;
			}
			set
			{
				if ((this._SoldBy != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldByChanging(value);
					this.SendPropertyChanging();
					this._SoldBy = value;
					this.SendPropertyChanged("SoldBy");
					this.OnSoldByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSalesInvoices1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSalesInvoices2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice3", Storage="_MstUser3", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSalesInvoices3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices3.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSalesInvoices4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice5", Storage="_MstUser5", ThisKey="SoldBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnSalesInvoices5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices5.Add(this);
						this._SoldBy = value.Id;
					}
					else
					{
						this._SoldBy = default(int);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoiceItem")]
	public partial class TrnSalesInvoiceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SIId;
		
		private int _ItemId;
		
		private System.Nullable<int> _ItemInventoryId;
		
		private int _UnitId;
		
		private decimal _Price;
		
		private int _DiscountId;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountAmount;
		
		private decimal _NetPrice;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private int _TaxId;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private decimal _BaseQuantity;
		
		private decimal _BasePrice;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSIIdChanging(int value);
    partial void OnSIIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(System.Nullable<int> value);
    partial void OnItemInventoryIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnNetPriceChanging(decimal value);
    partial void OnNetPriceChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxIdChanging(int value);
    partial void OnTaxIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBasePriceChanging(decimal value);
    partial void OnBasePriceChanged();
    #endregion
		
		public TrnSalesInvoiceItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstDiscount = default(EntityRef<MstDiscount>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int NOT NULL")]
		public int SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int")]
		public System.Nullable<int> ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="Int NOT NULL")]
		public int TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoiceItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnSalesInvoiceItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesInvoiceItem", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesInvoiceItem", Storage="_MstTax", ThisKey="TaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._TaxId = value.Id;
					}
					else
					{
						this._TaxId = default(int);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnSalesInvoiceItem", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(int);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesOrder")]
	public partial class TrnSalesOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _SONumber;
		
		private System.DateTime _SODate;
		
		private string _ManualSONumber;
		
		private int _CustomerId;
		
		private int _TermId;
		
		private string _Remarks;
		
		private int _SoldBy;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSalesOrderItem> _TrnSalesOrderItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSONumberChanging(string value);
    partial void OnSONumberChanged();
    partial void OnSODateChanging(System.DateTime value);
    partial void OnSODateChanged();
    partial void OnManualSONumberChanging(string value);
    partial void OnManualSONumberChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSoldByChanging(int value);
    partial void OnSoldByChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSalesOrder()
		{
			this._TrnSalesOrderItems = new EntitySet<TrnSalesOrderItem>(new Action<TrnSalesOrderItem>(this.attach_TrnSalesOrderItems), new Action<TrnSalesOrderItem>(this.detach_TrnSalesOrderItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SONumber
		{
			get
			{
				return this._SONumber;
			}
			set
			{
				if ((this._SONumber != value))
				{
					this.OnSONumberChanging(value);
					this.SendPropertyChanging();
					this._SONumber = value;
					this.SendPropertyChanged("SONumber");
					this.OnSONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODate", DbType="DateTime NOT NULL")]
		public System.DateTime SODate
		{
			get
			{
				return this._SODate;
			}
			set
			{
				if ((this._SODate != value))
				{
					this.OnSODateChanging(value);
					this.SendPropertyChanging();
					this._SODate = value;
					this.SendPropertyChanged("SODate");
					this.OnSODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualSONumber", DbType="NVarChar(50)")]
		public string ManualSONumber
		{
			get
			{
				return this._ManualSONumber;
			}
			set
			{
				if ((this._ManualSONumber != value))
				{
					this.OnManualSONumberChanging(value);
					this.SendPropertyChanging();
					this._ManualSONumber = value;
					this.SendPropertyChanged("ManualSONumber");
					this.OnManualSONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldBy", DbType="Int NOT NULL")]
		public int SoldBy
		{
			get
			{
				return this._SoldBy;
			}
			set
			{
				if ((this._SoldBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldByChanging(value);
					this.SendPropertyChanging();
					this._SoldBy = value;
					this.SendPropertyChanged("SoldBy");
					this.OnSoldByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesOrder_TrnSalesOrderItem", Storage="_TrnSalesOrderItems", ThisKey="Id", OtherKey="SOId")]
		public EntitySet<TrnSalesOrderItem> TrnSalesOrderItems
		{
			get
			{
				return this._TrnSalesOrderItems;
			}
			set
			{
				this._TrnSalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrder", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesOrder", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesOrder", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder", Storage="_MstUser", ThisKey="SoldBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._SoldBy = value.Id;
					}
					else
					{
						this._SoldBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder1", Storage="_MstUser1", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSalesOrders1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders1.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder2", Storage="_MstUser2", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSalesOrders2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders2.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder3", Storage="_MstUser3", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSalesOrders3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders3.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder4", Storage="_MstUser4", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSalesOrders4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders4.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder5", Storage="_MstUser5", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnSalesOrders5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders5.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesOrder = this;
		}
		
		private void detach_TrnSalesOrderItems(TrnSalesOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesOrderItem")]
	public partial class TrnSalesOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SOId;
		
		private int _ItemId;
		
		private System.Nullable<int> _ItemInventoryId;
		
		private int _UnitId;
		
		private decimal _Price;
		
		private int _DiscountId;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountAmount;
		
		private decimal _NetPrice;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private int _TaxId;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private decimal _BaseQuantity;
		
		private decimal _BasePrice;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnSalesOrder> _TrnSalesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSOIdChanging(int value);
    partial void OnSOIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(System.Nullable<int> value);
    partial void OnItemInventoryIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnNetPriceChanging(decimal value);
    partial void OnNetPriceChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxIdChanging(int value);
    partial void OnTaxIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBasePriceChanging(decimal value);
    partial void OnBasePriceChanged();
    #endregion
		
		public TrnSalesOrderItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstDiscount = default(EntityRef<MstDiscount>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnSalesOrder = default(EntityRef<TrnSalesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOId", DbType="Int NOT NULL")]
		public int SOId
		{
			get
			{
				return this._SOId;
			}
			set
			{
				if ((this._SOId != value))
				{
					if (this._TrnSalesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOIdChanging(value);
					this.SendPropertyChanging();
					this._SOId = value;
					this.SendPropertyChanged("SOId");
					this.OnSOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int")]
		public System.Nullable<int> ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="Int NOT NULL")]
		public int TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrderItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesOrderItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnSalesOrderItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnSalesOrderItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesOrderItem", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.TrnSalesOrderItems.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderItems.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesOrderItem", Storage="_MstTax", ThisKey="TaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.TrnSalesOrderItems.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderItems.Add(this);
						this._TaxId = value.Id;
					}
					else
					{
						this._TaxId = default(int);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesOrderItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSalesOrderItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesOrder_TrnSalesOrderItem", Storage="_TrnSalesOrder", ThisKey="SOId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSalesOrder TrnSalesOrder
		{
			get
			{
				return this._TrnSalesOrder.Entity;
			}
			set
			{
				TrnSalesOrder previousValue = this._TrnSalesOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesOrder.Entity = null;
						previousValue.TrnSalesOrderItems.Remove(this);
					}
					this._TrnSalesOrder.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderItems.Add(this);
						this._SOId = value.Id;
					}
					else
					{
						this._SOId = default(int);
					}
					this.SendPropertyChanged("TrnSalesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockIn")]
	public partial class TrnStockIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _INNumber;
		
		private System.DateTime _INDate;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnINNumberChanging(string value);
    partial void OnINNumberChanged();
    partial void OnINDateChanging(System.DateTime value);
    partial void OnINDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockIn()
		{
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockInItems = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems), new Action<TrnStockInItem>(this.detach_TrnStockInItems));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string INNumber
		{
			get
			{
				return this._INNumber;
			}
			set
			{
				if ((this._INNumber != value))
				{
					this.OnINNumberChanging(value);
					this.SendPropertyChanging();
					this._INNumber = value;
					this.SendPropertyChanged("INNumber");
					this.OnINNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDate", DbType="DateTime NOT NULL")]
		public System.DateTime INDate
		{
			get
			{
				return this._INDate;
			}
			set
			{
				if ((this._INDate != value))
				{
					this.OnINDateChanging(value);
					this.SendPropertyChanging();
					this._INDate = value;
					this.SendPropertyChanged("INDate");
					this.OnINDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInItem", Storage="_TrnStockInItems", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this._TrnStockInItems;
			}
			set
			{
				this._TrnStockInItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockIn", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockIns1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockIns2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn3", Storage="_MstUser3", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockIns3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns3.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockIns4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockInItem")]
	public partial class TrnStockInItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _INId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnINIdChanging(int value);
    partial void OnINIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockInItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="Int NOT NULL")]
		public int INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockInItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockInItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockInItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInItem", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnStockInItems.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(int);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOut")]
	public partial class TrnStockOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _OTNumber;
		
		private System.DateTime _OTDate;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnOTNumberChanging(string value);
    partial void OnOTNumberChanged();
    partial void OnOTDateChanging(System.DateTime value);
    partial void OnOTDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockOut()
		{
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OTNumber
		{
			get
			{
				return this._OTNumber;
			}
			set
			{
				if ((this._OTNumber != value))
				{
					this.OnOTNumberChanging(value);
					this.SendPropertyChanging();
					this._OTNumber = value;
					this.SendPropertyChanged("OTNumber");
					this.OnOTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTDate", DbType="DateTime NOT NULL")]
		public System.DateTime OTDate
		{
			get
			{
				return this._OTDate;
			}
			set
			{
				if ((this._OTDate != value))
				{
					this.OnOTDateChanging(value);
					this.SendPropertyChanging();
					this._OTDate = value;
					this.SendPropertyChanged("OTDate");
					this.OnOTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockOut", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockOuts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockOuts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut3", Storage="_MstUser3", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockOuts3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts3.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockOuts4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOutItem")]
	public partial class TrnStockOutItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OTId;
		
		private int _ItemId;
		
		private int _ItemInventoryId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOTIdChanging(int value);
    partial void OnOTIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(int value);
    partial void OnItemInventoryIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockOutItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="Int NOT NULL")]
		public int OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int NOT NULL")]
		public int ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOutItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockOutItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(int);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutItem", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(int);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockTransfer")]
	public partial class TrnStockTransfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _STNumber;
		
		private System.DateTime _STDate;
		
		private int _ToBranchId;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstBranch> _MstBranch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSTNumberChanging(string value);
    partial void OnSTNumberChanged();
    partial void OnSTDateChanging(System.DateTime value);
    partial void OnSTDateChanged();
    partial void OnToBranchIdChanging(int value);
    partial void OnToBranchIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockTransfer()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstBranch1 = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STNumber
		{
			get
			{
				return this._STNumber;
			}
			set
			{
				if ((this._STNumber != value))
				{
					this.OnSTNumberChanging(value);
					this.SendPropertyChanging();
					this._STNumber = value;
					this.SendPropertyChanged("STNumber");
					this.OnSTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STDate", DbType="DateTime NOT NULL")]
		public System.DateTime STDate
		{
			get
			{
				return this._STDate;
			}
			set
			{
				if ((this._STDate != value))
				{
					this.OnSTDateChanging(value);
					this.SendPropertyChanging();
					this._STDate = value;
					this.SendPropertyChanged("STDate");
					this.OnSTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBranchId", DbType="Int NOT NULL")]
		public int ToBranchId
		{
			get
			{
				return this._ToBranchId;
			}
			set
			{
				if ((this._ToBranchId != value))
				{
					if (this._MstBranch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToBranchIdChanging(value);
					this.SendPropertyChanging();
					this._ToBranchId = value;
					this.SendPropertyChanged("ToBranchId");
					this.OnToBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockTransfers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockTransfers2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer3", Storage="_MstUser3", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockTransfers3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers3.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockTransfers4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer1", Storage="_MstBranch1", ThisKey="ToBranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch1
		{
			get
			{
				return this._MstBranch1.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch1.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch1.Entity = null;
						previousValue.TrnStockTransfers1.Remove(this);
					}
					this._MstBranch1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers1.Add(this);
						this._ToBranchId = value.Id;
					}
					else
					{
						this._ToBranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
	}
}
#pragma warning restore 1591
